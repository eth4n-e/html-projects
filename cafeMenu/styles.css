/* #menu { reference elements with id attribute like so (with a #)
    background-color:burlywood;
    width:80%; will set width of div element to 80% of parent element (body)
    margin-left:auto;
    margin-right:auto;
    margin-left / margin-right: auto centers element when a fix width is specified
    separately, think margin-left:auto gives left side share of the remaining space, 
       so if margin-left auto and margin-right auto it's like the left / right are getting an equal share of remaining space 
}*/
body { /*reference a html element w its name*/
    background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
    font-family:sans-serif; /*sets all font in page to be sans-serif*/
    padding:20px /* margin space | border-> [ padding space { content } padding space ] <- border | margin space */
}

h1 {
    font-size: 40px;
    margin-top: 0;
    margin-bottom: 15px;
}
  
h2 {
font-size: 30px;
}

.established {
    font-style: italic;
}

h1,h2,p { 
    text-align:center;
}
/*elements w same styling can be written separated by commas opposed to:
h1 {
    text-align: center;
}
h2 {
    text-align: center;
}
p {
    text-align: center;
}
*/

.menu { /*reference class attributes like so (with a dot)*/
    background-color: burlywood;
    width:80%;
    margin-left:auto;
    margin-right:auto;
    padding:20px; /*if all sides of padding the same can use the padding property vs 
                    padding-left: 20px; padding-right:20px; padding-top:20px; padding-bottom:20px;
                  */
    max-width:500px; /*before this property: menu would take up 80% of body, on a very large screen the 
                       flavor / price would appear very far apart
                       max-width limits how wide the menu can become so <500px, the width will be 80% of body
                       >=500px, the menu will always be 500px
                    */
}

img {
    display: block; /*default behavior for images is inline display*/
    margin-left: auto;
    margin-right: auto;
    margin-top: -25px; /*can use negative margins to pull an element up*/
}

hr { /*horizontal rules have a default border width of 1px so a height of 2px creates a 4px element*/
    height:2px;
    background-color: brown;
    border-color: brown;
}

.bottom-line {
    margin-top:25px;
}

h1,h2 { /*want unique fonts for the coffee / dessert headers*/
    font-family: Impact, serif; /*second value is a fallback value in case that Impact unavailable*/
}

.item p { /*styling will apply to all paragraph elements nested within the item class (first article element)*/
    display:inline-block; /*paragraph elements are block elements, this will make them behave more like inline elements*/
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 18px;
}
.flavor, .dessert { /*apply same style to multiple selectors*/
    text-align:left;
    width:75%; /*reason for width: with inline block elements, the widht is typically only as much as the content*/
}
.price {
    text-align:right;
    width:25%; /*text for price smaller / less, needs less width, when resizing page when both were 50%, the flavor text would wrap to next line*/
}

/*FOOTER*/
footer {
    font-size: 14px;
}
  
.address {
    margin-bottom: 5px;
}
  
a {
    color: black;
}
  
a:visited { /*after the colon (visited) is a pseudo-selector which defines a special state for the element (e.g. when the link has already been visited / clicked)*/
    color: black;
}
  
a:hover { /*styles link when hovered over*/
    color: brown;
}
  
a:active { /*styles link when clicked*/
    color: brown;
}